We are working on a computing fundamentals quiz bot
import json
import random
import time
from datetime import datetime

# --- Load question bank ---
with open("questions.json", "r") as f:
    question_bank = json.load(f)

# --- Select 10 random questions ---
quiz_questions = random.sample(question_bank, 10)

# --- Data tracking ---
results = []

print("=== Welcome to the Python Knowledge Quiz ===")
print("Answer the following 10 questions.\n")

for index, q in enumerate(quiz_questions, 1):
    print(f"\nQ{index}. {q['question']}")
    start = time.time()

    # Handle True/False questions
    if q["type"] == "tf":
        answer = input("True or False: ").strip().lower()
        correct = (answer.startswith("t") and q["answer"] is True) or \
                  (answer.startswith("f") and q["answer"] is False)

    # Handle Multiple Choice questions
    elif q["type"] == "mcq":
        for i, option in enumerate(q["options"], 1):
            print(f"{i}. {option}")
        choice = input("Enter number: ").strip()
        correct = q["options"][int(choice)-1] == q["answer"]

    # Handle Free Response questions
    elif q["type"] == "free":
        response = input("Your answer: ").lower()
        keywords = q["keywords"]
        keyword_hits = sum(kw in response for kw in keywords)
        correct = keyword_hits >= len(keywords) // 2

    end = time.time()
    elapsed = round(end - start, 2)

    results.append({
        "id": q["id"],
        "question": q["question"],
        "correct": correct,
        "time": elapsed
    })

# --- Compute statistics ---
total_correct = sum(r["correct"] for r in results)
avg_time = sum(r["time"] for r in results) / len(results)
fastest = min(results, key=lambda x: x["time"])
slowest = max(results, key=lambda x: x["time"])

print("\n=== QUIZ SUMMARY ===")
print(f"Total correct: {total_correct}/{len(results)}")
print(f"Accuracy: {total_correct / len(results) * 100:.1f}%")
print(f"Average time per question: {avg_time:.2f}s")
print(f"Fastest question: \"{fastest['question'][:40]}...\" in {fastest['time']}s")
print(f"Slowest question: \"{slowest['question'][:40]}...\" in {slowest['time']}s")

# --- Save session to file ---
session_data = {
    "timestamp": datetime.now().isoformat(),
    "total_correct": total_correct,
    "total_questions": len(results),
    "accuracy": total_correct / len(results) * 100,
    "average_time": avg_time,
    "results": results
}

with open("quiz_results.json", "a") as f:
    json.dump(session_data, f)
    f.write("\n")

print("\nYour results were saved to quiz_results.json")
